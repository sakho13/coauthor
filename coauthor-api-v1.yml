openapi: "3.0.3"
info:
  title: CoAuthor API
  version: "1.0"
servers:
  - url: http://localhost:3000/api
    description: Local server
tags:
  - name: InDevelopment
    description: "開発中"

paths:
  /v1/user:
    get:
      summary: ユーザ情報の取得
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
    post:
      summary: ユーザ情報の登録
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                  status:
                    type: string
                    enum:
                      - EXISTS
                      - CREATED

  /v1/user/history:
    get:
      summary: ユーザ作業履歴の取得
      tags:
        - InDevelopment
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object

  /v1/novel:
    post:
      summary: 小説情報マスタの登録
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                summary:
                  type: string
                novelType:
                  type: string
                  enum:
                    - 0
                    - 1
                  description: "0: 連載, 1: 短編"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  novel:
                    $ref: "#/components/schemas/CoAuthor_Novel"
    delete:
      summary: 小説情報マスタの削除
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                novelId:
                  type: string
                code:
                  type: string
                  description: "削除コード（novelIdの先頭4文字）"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  novelId:
                    type: string

  /v1/novels:
    get:
      summary: 登録済み小説リストの取得
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  novels:
                    type: array
                    items:
                      $ref: "#/components/schemas/CoAuthor_Novel_AppendedDate"

  /v1/novel/chapter/content:
    get:
      summary: 小説章の内容取得
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - name: novel_id
          in: query
          required: true
          schema:
            type: string
        - name: chapter_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  chapter:
                    type: object
                    properties:
                      novelId:
                        type: string
                      chapterId:
                        type: string
                      content:
                        type: string
    post:
      summary: 小説章の内容登録
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                novelId:
                  type: string
                chapterId:
                  type: string
                content:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  novelId:
                    type: string
                  chapterId:
                    type: string

  /v1/novel/chapters:
    get:
      summary: 小説章リストの取得
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - name: novel_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  novel:
                    $ref: "#/components/schemas/CoAuthor_Novel_AppendedDate"
                  chapters:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        order:
                          type: integer
                        title:
                          type: string
    post:
      summary: 小説章の順序更新
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                novelId:
                  type: string
                orders:
                  type: array
                  items:
                    type: object
                    properties:
                      chapterId:
                        type: string
                      order:
                        type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  chapters:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        order:
                          type: integer
                        title:
                          type: string

components:
  schemas:
    ApiV1ErrorOut:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        columns:
          type: array
          items:
            $ref: "#/components/schemas/ApiV1ErrorOutColumn"
    ApiV1ErrorOutColumn:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
    CoAuthor_Novel:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
        novelType:
          type: string
          enum:
            - SERIAL
            - SINGLE
          description: "SERIAL: 連載, SINGLE: 短編"
    CoAuthor_Novel_AppendedDate:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
        novelType:
          type: string
          enum:
            - SERIAL
            - SINGLE
          description: "SERIAL: 連載, SINGLE: 短編"
        updatedAt:
          type: string
          format: date-time
          pattern: "YYYY-MM-DDTHH:mm:ssZ"
        createdAt:
          type: string
          format: date-time
          pattern: "YYYY-MM-DDTHH:mm:ssZ"

  parameters:
    AuthorizationHeader:
      name: Authorization
      in: header
      required: true
      description: Authorization token
      schema:
        type: string
        description: Bearer token
